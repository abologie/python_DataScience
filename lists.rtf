{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fswiss\fcharset0 Helvetica;\f2\fmodern\fcharset0 Courier;
\f3\fswiss\fcharset0 Helvetica-Light;\f4\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red46\green46\blue46;\red255\green255\blue255;\red26\green26\blue26;
\red76\green76\blue76;\red0\green0\blue0;\red38\green38\blue38;\red237\green237\blue237;\red252\green251\blue251;
\red12\green99\blue160;\red0\green57\blue84;\red246\green246\blue246;\red44\green44\blue44;\red44\green154\blue192;
\red230\green241\blue245;\red123\green83\blue30;\red187\green81\blue85;\red99\green99\blue99;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid901\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}}
\margl1440\margr1440\vieww12400\viewh11840\viewkind0
\deftab720
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs38 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 REVIEW QUESTION 1
\fs32 \cf4 \strokec4  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl448\sa453\partightenfactor0
\cf4 \strokec4 Select the true statement.\cb1 \
\pard\pardeftab720\sl384\partightenfactor0

\fs24 \cf2 \cb3 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  A Python list allows you to store the same value as two variables with different names.\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  A Python list is a way to name a collection of values, instead of having to create separate variables for each element. \
\pard\pardeftab720\sl384\partightenfactor0
\cf6 \strokec6 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 A Python list is a way to name a collection of values, instead of having to create separate variables for each element. - correct\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  A Python list is a data structure to hold two arbitrary elements.\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  A Python list can only be used for integers.\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\pard\pardeftab720\sl448\partightenfactor0

\fs32 \cf4 \strokec4 \shad0 \
\pard\pardeftab720\sl300\partightenfactor0

\f1\b\fs26 \cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 FINAL CHECK\
\pard\pardeftab720\sl300\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 YOUR ANSWER\
\pard\pardeftab720\sl448\partightenfactor0

\f0\b0\fs32 \cf4 \strokec4 \shad0  
\f1\b\fs26 \cf3 \cb10 \strokec3 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 SAVE\
\pard\pardeftab720\sl300\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 YOUR ANSWER\
\pard\pardeftab720\sl448\partightenfactor0

\f0\b0\fs32 \cf4 \strokec4 \shad0  \
\pard\pardeftab720\sl300\qc\partightenfactor0

\f1\b\fs26 \cf6 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 TOGGLE ANSWER VISIBILITY\
\pard\pardeftab720\sl300\partightenfactor0
\cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 SHOW ANSWER
\f0\b0\fs32 \cf4 \cb3 \strokec4 \shad0  
\i \cf5 \strokec5 You have used 1 of 2 submissions
\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl460\partightenfactor0

\fs38 \cf2 \cb3 \strokec2 REVIEW QUESTION 2
\fs32 \cf4 \strokec4  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl448\sa453\partightenfactor0
\cf4 \strokec4 In the video, Filip used 
\f2\fs28 \cb12 type(fam)
\f0\fs32 \cb3  and 
\f2\fs28 \cb12 type(fam2)
\f0\fs32 \cb3  to reveal the type of a Python list. What was the result?\cb1 \
\pard\pardeftab720\sl384\partightenfactor0

\fs24 \cf2 \cb3 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 pylist
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 struct
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 integer
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 list
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  \
\pard\pardeftab720\sl384\partightenfactor0
\cf6 \strokec6 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 <code>list</code> - correct\
\pard\pardeftab720\sl448\partightenfactor0

\fs32 \cf4 \cb1 \strokec4 \shad0 \
\pard\pardeftab720\sl300\partightenfactor0

\f1\b\fs26 \cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 FINAL CHECK\
\pard\pardeftab720\sl300\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 YOUR ANSWER\
\pard\pardeftab720\sl448\partightenfactor0

\f0\b0\fs32 \cf4 \strokec4 \shad0  
\f1\b\fs26 \cf3 \cb10 \strokec3 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 SAVE\
\pard\pardeftab720\sl300\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 YOUR ANSWER\
\pard\pardeftab720\sl448\partightenfactor0

\f0\b0\fs32 \cf4 \strokec4 \shad0  \
\pard\pardeftab720\sl300\qc\partightenfactor0

\f1\b\fs26 \cf6 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 TOGGLE ANSWER VISIBILITY\
\pard\pardeftab720\sl300\partightenfactor0
\cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 SHOW ANSWER
\f0\b0\fs32 \cf4 \cb3 \strokec4 \shad0  
\i \cf5 \strokec5 You have used 1 of 2 submissions
\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl460\partightenfactor0

\fs38 \cf2 \cb3 \strokec2 REVIEW QUESTION 3
\fs32 \cf4 \strokec4  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl448\sa453\partightenfactor0
\cf4 \strokec4 Have a look at the different Python commands below. One of these commands is 
\b invalid
\b0  Python syntax to create a list 
\f2\fs28 \cb12 x
\f0\fs32 \cb3 . Can you tell which one?\cb1 \
\pard\pardeftab720\sl384\partightenfactor0

\fs24 \cf2 \cb3 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x = ["this", "is", "a" True "list"]
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  \
\pard\pardeftab720\sl384\partightenfactor0
\cf6 \strokec6 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 <code>x = ["this", "is", "a" True "list"]</code> - correct\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x = ["this", "is", "a", True, "list"]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x = ["this", "is", 1, True, "list"]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x = ["this" + "is", 1, True, "list"]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\pard\pardeftab720\sl448\partightenfactor0

\fs32 \cf4 \strokec4 \shad0 \
\pard\pardeftab720\sl300\partightenfactor0

\f1\b\fs26 \cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 FINAL CHECK\
\pard\pardeftab720\sl300\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 YOUR ANSWER\
\pard\pardeftab720\sl448\partightenfactor0

\f0\b0\fs32 \cf4 \strokec4 \shad0  
\f1\b\fs26 \cf3 \cb10 \strokec3 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 SAVE\
\pard\pardeftab720\sl300\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 YOUR ANSWER\
\pard\pardeftab720\sl448\partightenfactor0

\f0\b0\fs32 \cf4 \strokec4 \shad0  \
\pard\pardeftab720\sl300\qc\partightenfactor0

\f1\b\fs26 \cf6 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 TOGGLE ANSWER VISIBILITY\
\pard\pardeftab720\sl300\partightenfactor0
\cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 SHOW ANSWER
\f0\b0\fs32 \cf4 \cb3 \strokec4 \shad0  
\i \cf5 \strokec5 You have used 1 of 2 submissions
\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl460\partightenfactor0

\fs38 \cf2 \cb3 \strokec2 REVIEW QUESTION 4
\fs32 \cf4 \strokec4  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl448\sa453\partightenfactor0
\cf4 \strokec4 Have a look at the following list definition:
\f2\fs26 \cb12 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 x = ["you", 2, "are", "so", True]\
\pard\pardeftab720\sl400\partightenfactor0

\fs28 \cf4 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f0\fs32 \cf4 \cb1 \
\cb3 Which python data types does this list contain? There are three of them.\cb1 \
\pard\pardeftab720\sl384\partightenfactor0

\fs24 \cf2 \cb3 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  int\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  float\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  str\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  bool\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  list\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\
\
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 \strokec13 \shad0 Create a list\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 As opposed to 
\f2\fs22 \cb15 int
\f3\fs32 \cb3 , 
\f2\fs22 \cb15 bool
\f3\fs32 \cb3  etc, a list is a 
\i compound data type
\i0 : you can group values together:\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 a = "is"\
b = "nice"\
my_list = ["my", "list", a, b]\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\f3\fs32 \cf13 \cb3 \strokec13 After measuring the height of your family, you decide to collect some information on the house you're living in. The areas of the different parts of your house are stored in separate variables for now, as shown in the script.\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls1\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Create a list, 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3 , that contains the area of the hallway (
\f2\fs22 \cb15 hall
\f3\fs32 \cb3 ), kitchen (
\f2\fs22 \cb15 kit
\f3\fs32 \cb3 ), living room (
\f2\fs22 \cb15 liv
\f3\fs32 \cb3 ), bedroom (
\f2\fs22 \cb15 bed
\f3\fs32 \cb3 ) and bathroom (
\f2\fs22 \cb15 bath
\f3\fs32 \cb3 ), in this order. Use the predefined variables.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Print 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  with the {\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/functions.html#print"}}{\fldrslt 
\f2\fs22 \cf14 \cb15 \strokec14 print()}} function.\cb1 \
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 # area variables (in square meters)\
hall = 11.25\
kit = 18.0\
liv = 20.0\
bed = 10.75\
bath = 9.50\
\
# Create list areas\
areas = [hall, kit, liv, bed, bath]\
\
# Print areas\
print(areas)\
\pard\pardeftab720\sl300\partightenfactor0

\f2\fs22 \cf16 \cb3 \strokec16 <script.py> output:\
    [11.25, 18.0, 20.0, 10.75, 9.5]\cf7 \strokec7 \
\pard\tx720\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf13 \cb1 \strokec13 \
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 Create list with different types\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 A list can contain any Python type. Although it's not really common, a list can also contain a mix of Python types including strings, floats, booleans, etc.\cb1 \
\cb3 The printout of the previous exercise wasn't really satisfying. It's just a list of numbers representing the areas, but you can't tell which area corresponds to which part of your house.\cb1 \
\cb3 The code on the right is the start of a solution. For some of the areas, the name of the corresponding room is already placed in front. Pay attention here! 
\f2\fs22 \cb15 "bathroom"
\f3\fs32 \cb3  is a string, while 
\f2\fs22 \cb15 bath
\f3\fs32 \cb3  is a variable that represents the float 
\f2\fs22 \cb15 9.50
\f3\fs32 \cb3  you specified earlier.\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls2\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Finish the line of code that creates the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list such that the list first contains the name of each room as a string, and then its area. More specifically, add the strings 
\f2\fs22 \cb15 "hallway"
\f3\fs32 \cb3 , 
\f2\fs22 \cb15 "kitchen"
\f3\fs32 \cb3  and 
\f2\fs22 \cb15 "bedroom"
\f3\fs32 \cb3  at the appropriate locations.\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Print 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  again; is the printout more informative this time?\cb1 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 \
# area variables (in square meters)\
hall = 11.25\
kit = 18.0\
liv = 20.0\
bed = 10.75\
bath = 9.50\
\
# Adapt list areas\
areas = ["hallway", hall,"kitchen", kit, "living room", liv, "bedroom", bed, "bathroom", bath]\
\
# Print areas\
print(areas)\
\pard\pardeftab720\sl300\partightenfactor0

\f2\fs22 \cf16 \cb3 \strokec16 <script.py> output:\
    ['hallway', 11.25, 'kitchen', 18.0, 'living room', 20.0, 'bedroom', 10.75, 'bathroom', 9.5]\cf7 \strokec7 \
\pard\tx720\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf13 \cb1 \strokec13 \
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 List of lists\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 As a data scientist, you'll often be dealing with a lot of data, and it will make sense to group some of this data.\cb1 \
\cb3 Instead of creating a flat list containing strings and floats, representing the names and areas of the rooms in your house, you can create a list of lists. The script on the right can already give you an idea.\cb1 \
\cb3 Don't get confused here: 
\f2\fs22 \cb15 "hallway"
\f3\fs32 \cb3  is a string, while 
\f2\fs22 \cb15 hall
\f3\fs32 \cb3  is a variable that represents the float 
\f2\fs22 \cb15 11.25
\f3\fs32 \cb3  you specified earlier.\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls3\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Finish the list of lists so that it also contains the bedroom and bathroom data. Make sure you enter these in order!\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Print out 
\f2\fs22 \cb15 house
\f3\fs32 \cb3 ; does this way of structuring your data make more sense?\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Print out the type of 
\f2\fs22 \cb15 house
\f3\fs32 \cb3 . Are you still dealing with a list?\cb1 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 \
# area variables (in square meters)\
hall = 11.25\
kit = 18.0\
liv = 20.0\
bed = 10.75\
bath = 9.50\
\
# house information as list of lists\
house = [["hallway", hall],\
         ["kitchen", kit],\
         ["living room", liv],\
         ["bedroom", bed],\
         ["bathroom", bath]]\
\
# Print out house\
print(house)\
\
# Print out the type of house\
print(type(house))\
\pard\pardeftab720\sl300\partightenfactor0

\f2\fs22 \cf16 \cb3 \strokec16 <script.py> output:\
    [['hallway', 11.25], ['kitchen', 18.0], ['living room', 20.0], ['bedroom', 10.75], ['bathroom', 9.5]]\
    <class 'list'>\cf7 \strokec7 \
\pard\tx720\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf13 \cb1 \strokec13 \
\pard\pardeftab720\sl345\partightenfactor0

\f0\fs28 \cf2 \strokec2 REVIEW QUESTION 1
\f4\fs24 \cf6 \strokec6  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0 \cf6 \strokec6 Which pair of symbols do you need to do list subsetting in Python?\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  Parentheses: 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 ()
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 Curly brackets: 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \{\}
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 Brackets: 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 []
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  \
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 Brackets: <code>[]</code> - correct\
\cf2 \cb1 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  Quotes: 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 ""
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\pard\pardeftab720\sl280\partightenfactor0

\f4 \cf6 \strokec6 \shad0 \
\pard\pardeftab720\sl240\partightenfactor0

\f1\b\fs20 \cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 FINAL CHECK\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  
\f1\b\fs20 \cf3 \cb10 \strokec3 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 SAVE\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  \
\pard\pardeftab720\sl240\qc\partightenfactor0

\f1\b\fs20 \cf6 \cb3 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 TOGGLE ANSWER VISIBILITY\
\pard\pardeftab720\sl240\partightenfactor0
\cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 SHOW ANSWER
\f4\b0\fs24 \cf6 \cb1 \strokec6 \shad0  
\i \cf5 \strokec5 You have used 1 of 2 submissions
\i0 \cf6 \strokec6 \
\pard\pardeftab720\sl345\partightenfactor0

\f0\fs28 \cf2 \strokec2 REVIEW QUESTION 2
\f4\fs24 \cf6 \strokec6  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0 \cf6 \strokec6 What's the correct Python command to extract the element with index 
\f2\fs22 \cb12 1
\f0\fs24 \cb1  from a Python list 
\f2\fs22 \cb12 x
\f0\fs24 \cb1 ?\
\pard\pardeftab720\sl300\partightenfactor0
\cf4 \cb3 \strokec4 x[1]
\f4 \cf6 \cb1 \strokec6  \
\pard\pardeftab720\sl280\partightenfactor0
\cf6 \cb3 x[1] - correct\
\pard\pardeftab720\sl280\partightenfactor0
\cf6 \cb1  \
\
\pard\pardeftab720\sl240\partightenfactor0

\f1\b\fs20 \cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 FINAL CHECK\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  
\f1\b\fs20 \cf3 \cb10 \strokec3 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 SAVE\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  \
\pard\pardeftab720\sl240\qc\partightenfactor0

\f1\b\fs20 \cf6 \cb3 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 TOGGLE ANSWER VISIBILITY\
\pard\pardeftab720\sl240\partightenfactor0
\cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 SHOW ANSWER
\f4\b0\fs24 \cf6 \cb1 \strokec6 \shad0  
\i \cf5 \strokec5 You have used 1 of 2 submissions
\i0 \cf6 \strokec6 \
\pard\pardeftab720\sl345\partightenfactor0

\f0\fs28 \cf2 \strokec2 REVIEW QUESTION 3
\f4\fs24 \cf6 \strokec6  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0 \cf6 \strokec6 Suppose you have a list 
\f2\fs22 \cb12 y
\f0\fs24 \cb1 , containing 5 elements:
\f2\fs20 \cb12 \
\pard\pardeftab720\sl260\partightenfactor0
\cf6 y = ["this", "is", "a", True, "test"]\
\pard\pardeftab720\sl300\partightenfactor0

\fs22 \cf6 \
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0\fs24 \cf6 \cb1 \
Which two Python commands correctly extract the boolean value from this list?\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 y[2]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 y[3]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 y[4]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 y[-1]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 y[-2]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\pard\pardeftab720\sl260\partightenfactor0

\f2\fs22 \cf6 \cb12 \strokec6 \shad0 y[3]
\f4\fs24 \cb3 ,
\f2\fs22 \cb12 y[-2]
\f4\fs24 \cb3 , - correct\
\pard\pardeftab720\sl280\partightenfactor0
\cf6 \cb1 \
\pard\pardeftab720\sl240\partightenfactor0

\f1\b\fs20 \cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 CHECK\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  
\f1\b\fs20 \cf3 \cb10 \strokec3 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 SAVE\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  \
\pard\pardeftab720\sl240\qc\partightenfactor0

\f1\b\fs20 \cf6 \cb3 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 TOGGLE ANSWER VISIBILITY\
\pard\pardeftab720\sl240\partightenfactor0
\cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 SHOW ANSWER
\f4\b0\fs24 \cf6 \cb1 \strokec6 \shad0  
\i \cf5 \strokec5 You have used 1 of 3 submissions
\i0 \cf6 \strokec6 \
\pard\pardeftab720\sl345\partightenfactor0

\f0\fs28 \cf2 \strokec2 REVIEW QUESTION 4
\f4\fs24 \cf6 \strokec6  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0 \cf6 \strokec6 List slicing is a very powerful technique to extract several list elements from a list at the same time. If you want to slice a list 
\f2\fs22 \cb12 x
\f0\fs24 \cb1 , the general syntax is as follows:
\f2\fs20 \cb12 \
\pard\pardeftab720\sl260\partightenfactor0
\cf6 x[begin:end]\
\pard\pardeftab720\sl300\partightenfactor0

\fs22 \cf6 \
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0\fs24 \cf6 \cb1 \
Here, 
\f2\fs22 \cb12 begin
\f0\fs24 \cb1  and 
\f2\fs22 \cb12 end
\f0\fs24 \cb1  have to be replaced with indexes according to the slice you want to make.\
Which of the following statements about slicing is correct?\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \cb3 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  Both the 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 begin
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  and 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 end
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  indexes are included in the slice.\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  The 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 begin
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  index is included in the slice, the 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 end
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  index is not. \
\pard\pardeftab720\sl384\partightenfactor0
\cf6 \strokec6 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 The <code>begin</code> index is included in the slice, the <code>end</code> index is not. - correct\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  The 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 begin
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  index is not included in the slice, the 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 end
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  index is.\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  Neither the 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 begin
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  nor the 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 end
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  index are included in the slice.\cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\pard\tx720\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf13 \strokec13 \shad0 \
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 Subset and conquer\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 Subsetting Python lists is a piece of cake. Take the code sample below, which creates a list 
\f2\fs22 \cb15 x
\f3\fs32 \cb3  and then selects "b" from it. Remember that this is the second element, so it has index 1. You can also use negative indexing.\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 x = list["a", "b", "c", "d"]\
x[1]\
x[-3] # same result!\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\f3\fs32 \cf13 \cb3 \strokec13 Remember the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list from before, containing both strings and floats? Its definition is already in the script. Can you add the correct code to do some Python subsetting?\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls4\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Print out the second element from the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list, so 
\f2\fs22 \cb15 11.25
\f3\fs32 \cb3 .\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Subset and print out the last element of 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3 , being 
\f2\fs22 \cb15 9.50
\f3\fs32 \cb3 . Using a negative index makes sense here!\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Select the number representing the area of the living room and print it out.\cb1 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 \
\pard\pardeftab720\sl480\sa200\partightenfactor0
\cf13 \cb3 Subsetting Python lists is a piece of cake. Take the code sample below, which creates a list 
\f2\fs22 \cb15 x
\f3\fs32 \cb3  and then selects "b" from it. Remember that this is the second element, so it has index 1. You can also use negative indexing.\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 x = list["a", "b", "c", "d"]\
x[1]\
x[-3] # same result!\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\f3\fs32 \cf13 \cb3 \strokec13 Remember the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list from before, containing both strings and floats? Its definition is already in the script. Can you add the correct code to do some Python subsetting?\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls5\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Print out the second element from the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list, so 
\f2\fs22 \cb15 11.25
\f3\fs32 \cb3 .\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Subset and print out the last element of 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3 , being 
\f2\fs22 \cb15 9.50
\f3\fs32 \cb3 . Using a negative index makes sense here!\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Select the number representing the area of the living room and print it out.\cb1 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 \
# Create the areas list\
areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]\
\
# Print out second element from areas\
print(areas[1])\
\
# Print out last element from areas\
print(areas[-1])\
\
# Print out the area of the living room\
print(areas[5])\
\
\pard\pardeftab720\sl300\partightenfactor0

\f2\fs22 \cf16 \cb3 \strokec16 <script.py> output:\
    11.25\
    9.5\
    20.0\cf7 \strokec7 \
\pard\tx720\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf13 \cb1 \strokec13 \
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 Subset and calculate\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 After you've extracted values from a list, you can use them to perform additional calculations. Take this example, where the second and fourth element of a list 
\f2\fs22 \cb15 x
\f3\fs32 \cb3  are extracted. The strings that result are pasted together using the 
\f2\fs22 \cb15 +
\f3\fs32 \cb3  operator:\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 x = ["a", "b", "c", "d"]\
print(x[1] + x[3])\
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls6\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Using a combination of list subsetting and variable assignment, create a new variable, 
\f2\fs22 \cb15 eat_sleep_area
\f3\fs32 \cb3 , that contains the sum of the area of the kitchen and the area of the bedroom.\cb1 \
\ls6\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Print this new variable 
\f2\fs22 \cb15 eat_sleep_area
\f3\fs32 \cb3 .\cb1 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 \
# Create the areas list\
areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]\
\
# Sum of kitchen and bedroom area: eat_sleep_area\
eat_sleep_area = areas[3] + areas[7]\
\
# Print the variable eat_sleep_area\
print(eat_sleep_area)\
\pard\pardeftab720\sl300\partightenfactor0

\f2\fs22 \cf16 \cb3 \strokec16 <script.py> output:\
    28.75\cf7 \strokec7 \
\
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \strokec13 Slicing and dicing\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 Selecting single values from a list is just one part of the story. It's also possible to 
\i slice
\i0  your list, which means selecting multiple elements from your list. Use the following syntax:\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 my_list[start:end]\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\f3\fs32 \cf13 \cb3 \strokec13 The 
\f2\fs22 \cb15 start
\f3\fs32 \cb3  index will be included, while the 
\f2\fs22 \cb15 end
\f3\fs32 \cb3  index is 
\i not
\i0 .\cb1 \
\cb3 The code sample below shows an example. A list with 
\f2\fs22 \cb15 "b"
\f3\fs32 \cb3  and 
\f2\fs22 \cb15 "c"
\f3\fs32 \cb3 , corresponding to indexes 1 and 2, are selected from a list 
\f2\fs22 \cb15 x
\f3\fs32 \cb3 :\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 x = ["a", "b", "c", "d"]\
x[1:3]\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\f3\fs32 \cf13 \cb3 \strokec13 The elements with index 1 and 2 are included, while the element with index 3 is not.\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls7\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Use slicing to create a list, 
\f2\fs22 \cb15 downstairs
\f3\fs32 \cb3 , that contains the first 6 elements of 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3 .\cb1 \
\ls7\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Do a similar thing to create a new variable, 
\f2\fs22 \cb15 upstairs
\f3\fs32 \cb3 , that contains the last 4 elements of 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3 .\cb1 \
\ls7\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Print both 
\f2\fs22 \cb15 downstairs
\f3\fs32 \cb3  and 
\f2\fs22 \cb15 upstairs
\f3\fs32 \cb3  using {\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/functions.html#print"}}{\fldrslt 
\f2\fs22 \cf14 \cb15 \strokec14 print()}}.\cb1 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 \
\ls7\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}# Create the areas list\
{\listtext	\'95	}areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]\
{\listtext	\'95	}\
{\listtext	\'95	}# Use slicing to create downstairs\
{\listtext	\'95	}downstairs = areas[0:6]\
{\listtext	\'95	}\
{\listtext	\'95	}# Use slicing to create upstairs\
{\listtext	\'95	}upstairs = areas[6:]\
{\listtext	\'95	}\
{\listtext	\'95	}# Print out downstairs and upstairs\
{\listtext	\'95	}print(downstairs)\
{\listtext	\'95	}print(upstairs)\
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 \
\pard\pardeftab720\sl300\partightenfactor0
\ls8\ilvl0
\f2\fs22 \cf16 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec16 <script.py> output:\
\ls8\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec16     ['hallway', 11.25, 'kitchen', 18.0, 'living room', 20.0]\
\ls8\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec16     ['bedroom', 10.75, 'bathroom', 9.5]\
\pard\tx720\pardeftab720\sl480\partightenfactor0

\f3\fs32 \cf13 \cb1 \strokec13 \
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 Slicing and dicing (2)\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 In the video, Filip only discussed the syntax where you specify both where to begin and end the slice of your list:\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 my_list[begin:end]\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\f3\fs32 \cf13 \cb3 \strokec13 However, it's also possible not to specify these indexes. If you don't specify the 
\f2\fs22 \cb15 begin
\f3\fs32 \cb3  index, Python figures out that you want to start your slice at the beginning of your list. If you don't specify the 
\f2\fs22 \cb15 end
\f3\fs32 \cb3 index, the slice will go all the way to the last element of your list. To experiment with this, try the following commands in the IPython Shell:\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 x = ["a", "b", "c", "d"]\
x[:2]\
x[2:]\
x[:]\
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls9\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Use slicing to create the lists 
\f2\fs22 \cb15 downstairs
\f3\fs32 \cb3  and 
\f2\fs22 \cb15 upstairs
\f3\fs32 \cb3  again, but this time without using indexes if it's not necessary. Remember 
\f2\fs22 \cb15 downstairs
\f3\fs32 \cb3  is the first 6 elements of 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  and 
\f2\fs22 \cb15 upstairs
\f3\fs32 \cb3  is the last 4 elements of 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3 .\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\partightenfactor0
\ls10\ilvl0
\f4\b\fs36 \cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		{\field{\*\fldinst{HYPERLINK "https://campus.datacamp.com/"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 }}
\f1\b0\fs22 \cb17 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 \uc0\u8232 
\f3\fs32 \cf14 \cb1 \strokec14 \
# Create the areas list\
areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]\
\
# Alternative slicing to create downstairs\
downstairs = areas[:6]\
\
# Alternative slicing to create upstairs\
upstairs = areas[6:]\
\
\
\pard\pardeftab720\sl345\partightenfactor0

\f0\fs28 \cf2 \strokec2 REVIEW QUESTION 1
\f4\fs24 \cf6 \strokec6  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0 \cf6 \strokec6 Suppose you have a list 
\f2\fs22 \cb12 x
\f0\fs24 \cb1 , that is defined as follows:
\f2\fs20 \cb12 \
\pard\pardeftab720\sl260\partightenfactor0
\cf6 x = ["a", "b", "b"]\
\pard\pardeftab720\sl300\partightenfactor0

\fs22 \cf6 \
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0\fs24 \cf6 \cb1 \
To fix it, you want to change the second 
\f2\fs22 \cb12 "b"
\f0\fs24 \cb1  - the third element - to 
\f2\fs22 \cb12 "c"
\f0\fs24 \cb1 .\
Which command do you need for this?\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x[2] = "c"
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  \
\pard\pardeftab720\sl384\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 <code>x[2] = "c"</code> - correct\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \cb1 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x[2] = c
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x[3] = "c"
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x[3] = c
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\pard\pardeftab720\sl260\sa305\partightenfactor0

\b\fs22 \cf18 \cb3 \strokec18 \shad0 EXPLANATION\cb1 \
\pard\pardeftab720\sl300\partightenfactor0

\b0\fs24 \cf6 \cb3 \strokec6 The third element has index 2. You want to change this element with a string, so you need 
\f2\fs22 \cb12 "c"
\f0\fs24 \cb3  instead of
\f2\fs22 \cb12 c
\f0\fs24 \cb3 .\cb1 \
\pard\pardeftab720\sl240\partightenfactor0

\f1\b\fs20 \cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 FINAL CHECK\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  
\f1\b\fs20 \cf3 \cb10 \strokec3 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 SAVE\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  \
\pard\pardeftab720\sl240\qc\partightenfactor0

\f1\b\fs20 \cf6 \cb3 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 TOGGLE ANSWER VISIBILITY\
\pard\pardeftab720\sl240\partightenfactor0
\cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 HIDE ANSWER
\f4\b0\fs24 \cf6 \cb1 \strokec6 \shad0  
\i \cf5 \strokec5 You have used 1 of 2 submissions
\i0 \cf6 \strokec6 \
\pard\pardeftab720\sl345\partightenfactor0

\f0\fs28 \cf2 \strokec2 REVIEW QUESTION 2
\f4\fs24 \cf6 \strokec6  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0 \cf6 \strokec6 Have another look at list 
\f2\fs22 \cb12 x
\f0\fs24 \cb1 . This time, the second 
\f2\fs22 \cb12 "b"
\f0\fs24 \cb1  is replaced by a 
\f2\fs22 \cb12 "c"
\f0\fs24 \cb1 .
\f2\fs20 \cb12 \
\pard\pardeftab720\sl260\partightenfactor0
\cf6 x = ["a", "b", "c"]\
\pard\pardeftab720\sl300\partightenfactor0

\fs22 \cf6 \
\pard\pardeftab720\sl300\sa339\partightenfactor0

\f0\fs24 \cf6 \cb1 \
What line of Python code do you need to add 
\f2\fs22 \cb12 "d"
\f0\fs24 \cb1  at the end of the list 
\f2\fs22 \cb12 x
\f0\fs24 \cb1 ?\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x[4] = "d"
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x = x + "d"
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
 
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x = x + ["d"]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  \
\pard\pardeftab720\sl384\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 <code>x = x + ["d"]</code> - correct\
\pard\pardeftab720\sl384\partightenfactor0
\cf2 \cb1 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 x = x[4] + ["d"]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\pard\pardeftab720\sl260\sa305\partightenfactor0

\b\fs22 \cf18 \cb3 \strokec18 \shad0 EXPLANATION\cb1 \
\pard\pardeftab720\sl300\partightenfactor0

\b0\fs24 \cf6 \cb3 \strokec6 You basically have to create a single-element list containing 
\f2\fs22 \cb12 "d"
\f0\fs24 \cb3  and add that to the list 
\f2\fs22 \cb12 x
\f0\fs24 \cb3 . Next you have to assign the result of this addition to 
\f2\fs22 \cb12 x
\f0\fs24 \cb3  again to actually update 
\f2\fs22 \cb12 x
\f0\fs24 \cb3  for the future.\cb1 \
\pard\pardeftab720\sl240\partightenfactor0

\f1\b\fs20 \cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 FINAL CHECK\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  
\f1\b\fs20 \cf3 \cb10 \strokec3 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 SAVE\
\pard\pardeftab720\sl240\qc\partightenfactor0
\cf6 \cb3 \strokec6 \shad\shadx0\shady-20\shadr0\shado255 \shadc11 YOUR ANSWER\
\pard\pardeftab720\sl280\partightenfactor0

\f4\b0\fs24 \cf6 \cb1 \shad0  \
\pard\pardeftab720\sl240\qc\partightenfactor0

\f1\b\fs20 \cf6 \cb3 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 TOGGLE ANSWER VISIBILITY\
\pard\pardeftab720\sl240\partightenfactor0
\cf7 \cb8 \strokec7 \shad\shadx0\shady-20\shadr0\shado255 \shadc9 HIDE ANSWER
\f4\b0\fs24 \cf6 \cb1 \strokec6 \shad0  
\i \cf5 \strokec5 You have used 1 of 2 submissions
\i0 \cf6 \strokec6 \
\pard\pardeftab720\sl345\partightenfactor0

\f0\fs28 \cf2 \strokec2 REVIEW QUESTION 3
\f4\fs24 \cf6 \strokec6  \cf5 \strokec5 (1/1 point)\
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f0\fs32 \cf4 \cb3 \strokec4 Suppose you have a list 
\f2\fs28 \cb12 x
\f0\fs32 \cb3 , this time defined as follows:
\f2\fs26 \cb12 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 x = ["a", "b", "c", "d"]\
\pard\pardeftab720\sl400\partightenfactor0

\fs28 \cf4 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f0\fs32 \cf4 \cb1 \
\cb3 Next, you decide to remove an element from it, using 
\f2\fs28 \cb12 del
\f0\fs32 \cb3 :
\f2\fs26 \cb12 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 del(x[3])\
\pard\pardeftab720\sl400\partightenfactor0

\fs28 \cf4 \
\pard\pardeftab720\sl448\sa453\partightenfactor0

\f0\fs32 \cf4 \cb1 \
\cb3 How does the list 
\f2\fs28 \cb12 x
\f0\fs32 \cb3  look after this operation?\cb1 \
\pard\pardeftab720\sl384\partightenfactor0

\fs24 \cf2 \cb3 \strokec2 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 ["b", "c", "d"]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 ["a", "c", "d"]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 ["a", "b", "d"]
\f0\fs24 \cb1 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 \
\cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  
\f2\fs22 \cb12 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 ["a", "b", "c"]
\f0\fs24 \cb3 \shad\shadx0\shady-20\shadr0\shado102 \shadc0  \
\pard\pardeftab720\sl384\partightenfactor0
\cf6 \strokec6 \shad\shadx0\shady-20\shadr0\shado102 \shadc0 <code>["a", "b", "c"]</code> - correct\
\pard\pardeftab720\sl448\partightenfactor0

\fs32 \cf4 \cb1 \strokec4 \shad0 \
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 \strokec13 Replace list elements\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 Replacing list elements is pretty easy. Simply subset the list and assign new values to the subset. You can select single elements or you can change entire list slices at once.\cb1 \
\cb3 Use the IPython Shell to experiment with the commands below. Can you tell what's happening and why?\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 x = ["a", "b", "c", "d"]\
x[1] = "r"\
x[2:] = ["s", "t"]\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\f3\fs32 \cf13 \cb3 \strokec13 For this and the following exercises, you'll continue working on the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list that contains the names and areas of different rooms in a house.\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls11\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 You did a miscalculation when determining the area of the bathroom; it's 10.50 square meters instead of 9.50. Can you make the changes?\cb1 \
\ls11\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Make the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list more trendy! Change "living room" to "chill zone".\cb1 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf14 \strokec14 \
# Create the areas list\
areas = ["hallway", 11.25, "kitchen", 18.0, "living room", 20.0, "bedroom", 10.75, "bathroom", 9.50]\
\
# Correct the bathroom area\
areas[-1] = 10.50\
\
# Change "living room" to "chill zone"\
areas[4] = "chill zone"\
\
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 \strokec13 Extend a list\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 If you can change elements in a list, you sure want to be able to add elements to it, right? You can use the 
\f2\fs22 \cb15 +
\f3\fs32 \cb3  operator:\cb1 \
\pard\pardeftab720\sl200\partightenfactor0

\f2\fs22 \cf7 \cb15 \strokec7 x = ["a", "b", "c", "d"]\
y = x + ["e", "f"]\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\f3\fs32 \cf13 \cb3 \strokec13 You just won the lottery, awesome! You decide to build a poolhouse and a garage. Can you add the information to the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list?\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls12\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Use the 
\f2\fs22 \cb15 +
\f3\fs32 \cb3  operator to paste the list 
\f2\fs22 \cb15 ["poolhouse", 24.5]
\f3\fs32 \cb3  to the end of the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list. Store the resulting list as 
\f2\fs22 \cb15 areas_1
\f3\fs32 \cb3 .\cb1 \
\ls12\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Further extend 
\f2\fs22 \cb15 areas_1
\f3\fs32 \cb3  by adding data on your garage. Add the string 
\f2\fs22 \cb15 "garage"
\f3\fs32 \cb3  and float 
\f2\fs22 \cb15 15.45
\f3\fs32 \cb3 . Name the resulting list 
\f2\fs22 \cb15 areas_2
\f3\fs32 \cb3 .\cb1 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 # Create the areas list and make some changes\
areas = ["hallway", 11.25, "kitchen", 18.0, "chill zone", 20.0, \
         "bedroom", 10.75, "bathroom", 10.50]\
\
# Add poolhouse data to areas, new list is areas_1\
areas_1 = areas + ["poolhouse", 24.5]\
\
# Add garage data to areas_1, new list is areas_2\
areas_2 = areas_1 + ["garage", 15.45]\
\
\pard\pardeftab720\sl480\sa300\partightenfactor0

\f1\b\fs48 \cf13 \cb3 Inner workings of lists\cb1 \
\pard\pardeftab720\sl480\partightenfactor0

\f3\b0\fs22 \cf3 \cb14 \strokec3 100xp\
\pard\pardeftab720\sl480\sa200\partightenfactor0

\fs32 \cf13 \cb3 \strokec13 At the end of the video, Filip explained how Python lists work behind the scenes. In this exercise you'll get some hands-on experience with this.\cb1 \
\cb3 The Python code in the script already creates a list with the name 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  and a copy named 
\f2\fs22 \cb15 areas_copy
\f3\fs32 \cb3 . Next, the first element in the 
\f2\fs22 \cb15 areas_copy
\f3\fs32 \cb3  list is changed and the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list is printed out. If you hit 
\i Submit Answer
\i0  you'll see that, although you've changed 
\f2\fs22 \cb15 areas_copy
\f3\fs32 \cb3 , the change also takes effect in the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list. That's because 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  and 
\f2\fs22 \cb15 areas_copy
\f3\fs32 \cb3  point to the same list.\cb1 \
\cb3 If you want to prevent changes in 
\f2\fs22 \cb15 areas_copy
\f3\fs32 \cb3  to also take effect in 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3 , you'll have to do a more explicit copy of the 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3  list. You can do this with {\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/functions.html#func-list"}}{\fldrslt 
\f2\fs22 \cf14 \cb15 \strokec14 list()}} or by using 
\f2\fs22 \cb15 [:]
\f3\fs32 \cb3 .\cb1 \
\pard\pardeftab720\sl320\sa84\partightenfactor0

\f1\b\fs34 \cf14 \cb3 \strokec14 Instructions\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl480\partightenfactor0
\ls13\ilvl0
\f3\b0\fs32 \cf13 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Change the second command, that creates the variable 
\f2\fs22 \cb15 areas_copy
\f3\fs32 \cb3 , such that 
\f2\fs22 \cb15 areas_copy
\f3\fs32 \cb3  is an explicit copy of 
\f2\fs22 \cb15 areas
\f3\fs32 \cb1 \
\ls13\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 Now, changes made to 
\f2\fs22 \cb15 areas_copy
\f3\fs32 \cb3  shouldn't affect 
\f2\fs22 \cb15 areas
\f3\fs32 \cb3 . Hit 
\i Submit Answer
\i0  to check this.\cb1 \
\pard\tx720\pardeftab720\sl480\partightenfactor0
\cf13 \
# Create list areas\
areas = [11.25, 18.0, 20.0, 10.75, 9.50]\
\
# Create areas_copy\
areas_copy = areas[:]\
\
# Change areas_copy\
areas_copy[0] = 5.0\
\
# Print areas\
print(areas)\
\
\
}